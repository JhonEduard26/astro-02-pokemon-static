---
import { Image } from "astro:assets";
import StatIcon from "../../icons/stat-icon.astro";
import type { Pokemon } from "../../interfaces/pokemon";

interface Props {
  name: string;
  url: string;
}

const { name, url } = Astro.props;

const response = await fetch(url);

if (!response.ok) {
  return {
    status: response.status,
    statusText: response.statusText,
  };
}

const data = (await response.json()) as Pokemon;
const stats = data.stats.slice(0, 3);

const imageUrl = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${data.id}.png`;
const audioUrl = `https://raw.githubusercontent.com/PokeAPI/cries/main/cries/pokemon/latest/${data.id}.ogg`;
---

<div class="relative rounded-lg border-8" aria-label="Pokemon card">
  <div class="absolute top-1 left-1">
    <a href="/">
      <svg
        class="w-6 h-6 text-slate-100 hover:text-slate-300"
        viewBox="0 0 1024 1024"
        ><path
          fill="currentColor"
          d="M224 480h640a32 32 0 1 1 0 64H224a32 32 0 0 1 0-64z"></path><path
          fill="currentColor"
          d="m237.248 512 265.408 265.344a32 32 0 0 1-45.312 45.312l-288-288a32 32 0 0 1 0-45.312l288-288a32 32 0 1 1 45.312 45.312L237.248 512z"
        ></path></svg
      ></a
    >
  </div>
  <div class="h-full flex gap-6 p-6">
    <div>
      <Image
        transition:name={`${name}-image`}
        class="aspect-square object-contain"
        src={imageUrl}
        alt=""
        width={320}
        height={320}
      />
    </div>
    <div>
      <div>
        <h1 class="text-6xl font-bold capitalize tracking-tighter">
          {name}
        </h1>
        <div class="mb-6">
          <p class="mb-2 font-semibold capitalize">stats</p>
          <div class="flex justify-between">
            {
              stats.map((stat) => (
                <div class="flex items-center gap-2 px-2 py-1 bg-slate-300 rounded-sm">
                  <StatIcon name={stat.stat.name} className="w-5 h-5" />
                  <span class="font-bold text-slate-900">{stat.base_stat}</span>
                </div>
              ))
            }
          </div>
        </div>
      </div>
      <div class="mb-6">
        <p class="mb-2 font-semibold capitalize">types</p>
        <div class="flex gap-4">
          {
            data.types.map((type) => (
              <div
                class="px-2 py-1 pb-2 rounded-sm text-slate-100"
                style={`background-color: var(--${type.type.name})`}
              >
                <span class="text-xs uppercase font-semibold">
                  {type.type.name}
                </span>
              </div>
            ))
          }
        </div>
      </div>
      <div class="mb-4">
        <p>
          <span class="font-semibold">Height: </span>{data.height / 10} m.
        </p>
        <p>
          <span class="font-semibold">Height: </span>{data.weight / 10} m.
        </p>
      </div>
      <div>
        <audio class="w-full" controls>
          <source src={audioUrl} type="audio/ogg" />
          Your browser does not support the audio element.
        </audio>
      </div>
    </div>
  </div>
</div>
