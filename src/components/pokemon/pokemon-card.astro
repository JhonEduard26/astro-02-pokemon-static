---
import { Icon } from "astro-icon/components";
import { Image } from "astro:assets";
import type { Pokemon } from "@interfaces/pokemon";

interface Props {
  name: string;
  url: string;
}

const { name, url } = Astro.props;

const response = await fetch(url);

if (!response.ok) {
  return {
    status: response.status,
    statusText: response.statusText,
  };
}

const data = (await response.json()) as Pokemon;
const stats = data.stats.slice(0, 3);
// const id = url.split("/").at(-2);
const imageUrl = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${data.id}.png`;
---

<a
  class="inline-block bg-slate-700 p-4 rounded-md border-4 border-purple-900"
  href={`/pokemons/${name}`}
>
  <div class="mb-4 font-semibold">
    <!-- Type -->
    <p class="mb-2 text-2xl capitalize">{name}</p>
    <div class="flex gap-2">
      {
        data.types.map((type) => (
          <div
            class="px-2 py-1 rounded-sm text-slate-100"
            style={`background-color: var(--${type.type.name})`}
          >
            <span class="text-xs uppercase">{type.type.name}</span>
          </div>
        ))
      }
    </div>
  </div>

  <div class="mb-2 rounded-sm flex justify-center items-center">
    <Image
      transition:name={`${name}-image`}
      src={imageUrl}
      alt={name}
      width={200}
      height={200}
    />
  </div>

  <!-- Stats -->
  <div class="mb-6">
    <p class="mb-2 font-semibold capitalize">stats</p>
    <div class="flex justify-between">
      {
        stats.map((stat) => (
          <div class="flex items-center gap-1 px-2 py-1 bg-purple-700 rounded-sm">
            <Icon name={stat.stat.name} size={22} />
            <span class="font-semibold">{stat.base_stat}</span>
          </div>
        ))
      }
    </div>
  </div>
</a>

<style>
  a {
    @apply transition-[filter] hover:contrast-125;
  }
</style>
